# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3rc1/types.yaml
  - http://www.getcloudify.org/spec/aws-plugin/1.3rc1/plugin.yaml

inputs:

  image:
    type: string
    default: ''

  size:
    type: string
    default: ''

  key_path:
    type: string

  vol_zone:
    type: string

  vol_size:
    type: string

  vol_device:
    type: string

  external_ip:
    type: boolean

  external_sg:
    type: boolean

  external_kp:
    type: boolean

  external_vm:
    type: boolean

  external_vol:
    type: boolean

  resource_id_ip:
    type: string

  resource_id_sg:
    type: string

  resource_id_kp:
    type: string

  resource_id_vm:
    type: string

  resource_id_vol:
    type: string

  aws_config:
    default: {}

node_templates:

  simple_elastic_ip:
    type: cloudify.aws.nodes.ElasticIP
    properties:
      resource_id: { get_input: resource_id_ip }
      use_external_resource: { get_input: external_ip }
      aws_config: { get_input: aws_config }

  simple_security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      resource_id: { get_input: resource_id_sg }
      use_external_resource: { get_input: external_sg }
      description: Simple Security Group
      rules: []
      aws_config: { get_input: aws_config }

  simple_key_pair:
    type: cloudify.aws.nodes.KeyPair
    properties:
      resource_id: { get_input: resource_id_kp }
      use_external_resource: { get_input: external_kp }
      private_key_path: { get_input: key_path }
      aws_config: { get_input: aws_config }

  simple_instance:
    type: cloudify.aws.nodes.Instance
    properties:
      install_agent: false
      resource_id: { get_input: resource_id_vm }
      use_external_resource: { get_input: external_vm }
      image_id: { get_input: image }
      instance_type: { get_input: size }
      aws_config: { get_input: aws_config }

  simple_volume:
    type: cloudify.aws.nodes.Volume
    properties:
      resource_id: { get_input: resource_id_vol }
      use_external_resource: { get_input: external_vol }
      zone: { get_input: vol_zone }
      size: { get_input: vol_size }
      device: { get_input: vol_device }

plugins:
    ec2:
        executor: central_deployment_agent
        install: false

node_types:

  cloudify.aws.nodes.Volume:
    derived_from: cloudify.nodes.Volume
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Amazon AWS.
        type: string
        default: ''
      size:
        description: >
          The size of the volume in GB.
        type: string
      zone:
        description: >
          A string representing the AWS availability zone.
        type: string
      device:
        description: >
          The device on the instance
        type: string
      aws_config:
        description: >
          A dictionary of values to pass to authenticate with the AWS API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: aws.ec2.ebs.create
          inputs:
            args:
              default: {}
        delete:
          implementation: aws.ec2.ebs.delete
          inputs:
            args:
              default: {}
      cloudify.interfaces.validation:
        creation: aws.ec2.ebs.creation_validation

relationships:

  cloudify.aws.relationships.volume_connected_to_instance:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish: aws.ec2.ebs.attach
        unlink:
          implementation: aws.ec2.ebs.detach
          inputs:
            args:
              default: {}
