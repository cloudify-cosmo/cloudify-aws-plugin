# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3/types.yaml
  - http://www.getcloudify.org/spec/aws-plugin/1.3/plugin.yaml

inputs:

  aws_config:
    default: {}

  health_checks:
    default: {}

  image:
    type: string
    default: ''

  size:
    type: string
    default: ''

  key_path:
    type: string

  external_ip:
    type: boolean

  external_sg:
    type: boolean

  external_kp:
    type: boolean

  external_vm:
    type: boolean

  resource_id_ip:
    type: string

  resource_id_sg:
    type: string

  resource_id_kp:
    type: string

  resource_id_vm:
    type: string

  elb_name:     
    type: string

  zones:     
    type: string

  listeners:     
    type: string

  scheme:
    type: string
    default: ''

  subnets:
     default: []

  complex_listeners:
     default: []


node_templates:

  pair_a_connected_elastic_ip:
    type: cloudify.aws.nodes.ElasticIP
    properties:
      resource_id: { get_input: resource_id_ip }
      use_external_resource: { get_input: external_ip }
      aws_config: { get_input: aws_config }

  pair_a_connected_instance:
    type: cloudify.aws.nodes.Instance
    properties:
      install_agent: false
      resource_id: { get_input: resource_id_vm }
      use_external_resource: { get_input: external_vm }
      image_id: { get_input: image }
      instance_type: { get_input: size }
      aws_config: { get_input: aws_config }
    relationships:
      - type: cloudify.aws.relationships.instance_connected_to_elastic_ip
        target: pair_a_connected_elastic_ip

  pair_b_connected_security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      resource_id: { get_input: resource_id_sg }
      use_external_resource: { get_input: external_sg }
      description: Pair B Security Group
      rules:
        - ip_protocol: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
      aws_config: { get_input: aws_config }

  pair_b_connected_instance:
    type: cloudify.aws.nodes.Instance
    properties:
      install_agent: false
      resource_id: { get_input: resource_id_vm }
      use_external_resource: { get_input: external_vm }
      image_id: { get_input: image }
      instance_type: { get_input: size }
      aws_config: { get_input: aws_config }
    relationships:
      - type: cloudify.aws.relationships.instance_connected_to_security_group
        target: pair_b_connected_security_group

  pair_c_connected_elb:
    type: cloudify.aws.nodes.ElasticLoadBalancer
    properties:
      elb_name: { get_input: elb_name }
      zones: { get_input: zones }
      aws_config: { get_input: aws_config }
      listeners: { get_input: listeners }
      health_checks: { get_input: health_checks }
      scheme: { get_input: scheme }
      subnets: { get_input: subnets }
      complex_listeners: { get_input: complex_listeners }

  pair_c_connected_instance:
    type: cloudify.aws.nodes.Instance
    properties:
      install_agent: false
      resource_id: { get_input: resource_id_vm }
      use_external_resource: { get_input: external_vm }
      image_id: { get_input: image }
      instance_type: { get_input: size }
      aws_config: { get_input: aws_config }
    relationships:
      - type: cloudify.aws.relationships.instance_connected_to_load_balancer
        target: pair_c_connected_elb


plugins:
    ec2:
        executor: central_deployment_agent
        install: false
