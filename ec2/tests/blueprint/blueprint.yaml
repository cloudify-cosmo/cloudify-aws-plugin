# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - plugin.yaml

inputs:

  agent_server_name:
    type: string
    default: ''

  image_id:
    type: string
    default: ''

  flavor_id:
    type: string
    default: ''

  use_existing_agent_group:
    type: boolean
    default: false

  agent_security_group_name:
    type: string
    default: ''

  use_existing_agent_keypair:
    type: boolean
    default: false

  agent_keypair_name:
    type: string
    default: ''

  path_to_key_file:
    type: string

node_templates:

  agent_server:
    type: cloudify.aws.nodes.Instance
    properties:
      resource_id: { get_input: agent_server_name }
      install_agent: false
      image_id: { get_input: image_id }
      instance_type: { get_input: flavor_id }
      parameters:
        security_group_ids:
          - sg-73cd3f1e
        key_name: { get_input: agent_keypair_name }
      aws_config: {}
    relationships:
      - target: agent_ip
        type: cloudify.aws.relationships.instance_connected_to_elastic_ip
      - target: agent_security_group
        type: cloudify.aws.relationships.instance_connected_to_keypair
      - target: agent_keypair
        type: cloudify.aws.relationships.instance_connected_to_security_group

  agent_ip:
    type: cloudify.aws.nodes.ElasticIP

  agent_security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      resource_id: { get_input: agent_security_group_name }
      use_external_resource: { get_input: use_existing_agent_group }
      description: Security group for Cloudify agent VMs
      rules:
        - ip_protocol: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/32
        - ip_protocol: tcp
          from_port: 5985
          to_port: 5985
          cidr_ip: 0.0.0.0/32
      aws_config: {}

  agent_keypair:
    type: cloudify.aws.nodes.KeyPair
    properties:
      use_external_resource: { get_input: use_existing_agent_keypair }
      resource_id: { get_input: agent_keypair_name }
      private_key_path: { get_input: path_to_key_file }
      aws_config: {}

plugins:
    ec2:
        executor: central_deployment_agent
        install: false
