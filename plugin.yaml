##################################################################################
# Cloudify AWS EC2 built in types and plugins definitions.
##################################################################################

plugins:
  aws:
    executor: central_deployment_agent
    source: https://github.com/cloudify-cosmo/cloudify-aws-plugin/archive/1.3.zip
    package_name: cloudify-aws-plugin
    package_version: '1.3'

node_types:
  cloudify.aws.nodes.Instance:
    derived_from: cloudify.nodes.Compute
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      resource_id:
        description: >
          If this is an existing resource, you should provide the ID of the resource in Amazon AWS.
          If this a new resource, make this the name.
        type: string
        default: ''
      image_id:
        description: >
          The ID of the AMI image in your Amazon account.
        type: string
      instance_type:
        description: >
          The instance's size.
        type: string
      parameters:
        description: >
          The key value pair parameters allowed by Amazon API to the
          ec2.connection.EC2Connection.run_instances command. It should be mentioned that
          although this field is listed as optional. A non-trivial use case requires
          that both the key_name parameter and the security_groups parameter be specified.
        default: {}
      aws_config:
        description: >
          A dictionary of values to pass to authenticate with the AWS API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: aws.ec2.instance.run_instances
        start:
          implementation: aws.ec2.instance.start
        stop:
          implementation: aws.ec2.instance.stop
        delete:
          implementation: aws.ec2.instance.terminate
      cloudify.interfaces.validation:
        creation:
          implementation: aws.ec2.instance.creation_validation

  cloudify.aws.nodes.ElasticIP:
    derived_from: cloudify.nodes.VirtualIP
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Amazon AWS.
        type: string
        default: ''
      aws_config:
        description: >
          A dictionary of values to pass to authenticate with the AWS API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create: aws.ec2.elasticip.allocate
        delete: aws.ec2.elasticip.release
      cloudify.interfaces.validation:
        creation: aws.ec2.elasticip.creation_validation

  cloudify.aws.nodes.SecurityGroup:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Amazon AWS.
        type: string
        default: ''
      description:
        description: >
          The description field that is required for every security group that you create
          in Amazon.
        type: string
        default: ''
      rules:
        default: []
        description: >
          You need to pass in either src_group_id (security group ID) OR cidr_ip,
          and then the following three: ip_protocol, from_port and to_port.
      aws_config:
        description: >
          A dictionary of values to pass to authenticate with the AWS API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create: aws.ec2.securitygroup.create
        delete: aws.ec2.securitygroup.delete
      cloudify.interfaces.validation:
        creation: aws.ec2.securitygroup.creation_validation

  cloudify.aws.nodes.KeyPair:
    derived_from: cloudify.nodes.Root
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Amazon AWS.
        type: string
        default: ''
      private_key_path:
        description: >
          The path where the key should be saved on the machine. If this is a bootstrap
          process, this refers to the local computer. If this will run on the manager,
          this will be saved on the manager.
        type: string
        default: ''
      aws_config:
        description: >
          A dictionary of values to pass to authenticate with the AWS API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create: aws.ec2.keypair.create
        delete: aws.ec2.keypair.delete
      cloudify.interfaces.validation:
        creation: aws.ec2.keypair.creation_validation

  cloudify.aws.nodes.ElasticLoadBalancer:
    derived_from: cloudify.nodes.LoadBalancer
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      resource_id:
        description: >
          Either the name or ID of the resource in Cloudify. If this is an existing
          resource, you should provide the name or the ID of the resource in Amazon AWS.
        type: string
        default: ''
      elb_name:
        type: string
        description: >
          The mnemonic name associated with the new load balancer
      zones:
        description: >
          zones (List of strings) - The names of the availability zone(s) to add.
          example: ['us-east-1b','us-east-1b']
      security_groups:
        description: >
          security_groups (list of strings) - The security groups assigned to your LoadBalancer
          within your VPC.
          example: ['sg-123456','sg-7891011']
          FYI: security groups only supported with vpc
        default: []
      listeners:
        description: >
          listeners (List of tuples) - Each tuple contains three or four values, (LoadBalancerPortNumber,
          InstancePortNumber, Protocol, [SSLCertificateId]) where LoadBalancerPortNumber and
          InstancePortNumber are integer values between 1 and 65535, Protocol is a string containing
          either 'TCP', 'SSL', 'HTTP', or 'HTTPS'; SSLCertificateID is the ARN of a AWS IAM certificate,
          and must be specified when doing HTTPS.
          example: [[80, 8080, 'http'], [443, 8443, 'tcp']]
      health_checks:
        description: >
          list of healthchecks (dicts) to use as criteria for instance health
          example: [{'target': 'HTTP:8080/health'}, {'target': 'HTTP:80/alive'}]
        default: []
      scheme:
        type: string
        description: >
          The type of a LoadBalancer. By default, Elastic Load Balancing creates an internet-facing
          LoadBalancer with a publicly resolvable DNS name, which resolves to public IP addresses.
          Specify the value internal for this option to create an internal LoadBalancer with a DNS
          name that resolves to private IP addresses.
          This option is only available for LoadBalancers attached to an Amazon VPC.
        default: ''
      subnets:
        description: >
          list of strings - A list of subnet IDs in your VPC to attach to your LoadBalancer.
          example:
        default: []
      complex_listeners:
        description: >
          List of tuples - Each tuple contains four or five values, (LoadBalancerPortNumber,
          InstancePortNumber, Protocol, InstanceProtocol, SSLCertificateId).
          Where:
          LoadBalancerPortNumber and InstancePortNumber are integer values between 1 and 65535
          Protocol and InstanceProtocol is a string containing either 'TCP', 'SSL', 'HTTP', or 'HTTPS'
          SSLCertificateId is the ARN of an SSL certificate loaded into AWS IAM
        default: []
      aws_config:
        description: >
          A dictionary of values to pass to authenticate with the AWS API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: aws.ec2.elasticloadbalancer.create_elb
        delete:
          implementation: aws.ec2.elasticloadbalancer.delete_elb
      cloudify.interfaces.validation:
        creation:
          implementation: aws.ec2.elasticloadbalancer.creation_validation


relationships:
  cloudify.aws.relationships.instance_connected_to_elastic_ip:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish: aws.ec2.elasticip.associate
        unlink: aws.ec2.elasticip.disassociate

  cloudify.aws.relationships.instance_connected_to_keypair:
    derived_from: cloudify.relationships.connected_to

  cloudify.aws.relationships.instance_connected_to_security_group:
    derived_from: cloudify.relationships.connected_to

  cloudify.aws.relationships.instance_connected_to_load_balancer:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish: aws.ec2.elasticloadbalancer.add_instance_to_elb
        unlink: aws.ec2.elasticloadbalancer.remove_instance_from_elb

