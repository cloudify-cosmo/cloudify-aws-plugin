version: 2.1

job-post-steps: &job-post-steps
  post-steps:
   - slack/notify_failed

unittest-post-steps: &unittest-post-steps
  post-steps:
    - store_test_results:
        path: /home/circleci/project/nosetests.xml
    - store_artifacts:
        path: /home/circleci/project/coverage.xml
        prefix: tests
    - slack/notify_failed

orbs:
  node: cloudify/public-unittest-orb@volatile
  wagonorb: cloudify/wagon-bulder-orb@volatile
  releaseorb: cloudify/release-orb@volatile
  slack: cloudify/notify-slack@2

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:

  py36:
    docker:
      - image: circleci/python:3.6

  cloudify-machine-py3:
    machine:
      image: ubuntu-2004:202201-02

commands:

  setup_manager:
    steps:
      - run: |
          if [[ -z "${CLOUDIFY_HOST}" ]]; then
              exit 1
          fi
      - run: |
          if [[ -z "${CLOUDIFY_TENANT}" ]] && [ -z "${CIRCLE_PROJECT_REPONAME}" ]; then
              exit 1
          fi
      - run: |
          if [[ -z "${CLOUDIFY_TOKEN}" ]]; then
              exit 1
          fi
      - run: |
          response=$(curl --write-out '%{http_code}' --silent --insecure --header "Tenant: ${CLOUDIFY_TENANT}" --header "Authentication-Token: ${CLOUDIFY_TOKEN}" https://$CLOUDIFY_HOST/api/v3.1/status --output /dev/null)
          if [[ $response != 200 ]]; then
              echo "Failed to get manager status";
              exit 1
          fi
      - run: pip3 install urllib3==1.26.15 requests-toolbelt==0.10.1
      - run: pip3 install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/refs/heads/master.zip
      - run: git submodule update --init --recursive --remote

  ec2_image_verify:
    steps:
      - run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      - run: |
          aws configure set default.region us-east-1
          aws configure set aws_access_key_id $(echo $aws_access_key_id | base64 -d -w 0)
          aws configure set aws_secret_access_key $(echo $aws_secret_access_key | base64 -d -w 0)
          aws configure set output json
      - run: |
          ret=`aws ec2 describe-images --filters Name=name,Values=CentOS7-cloudify-examples-image | jq '.Images' | jq -r '.[0].Name'`
          if [ $ret != "CentOS7-cloudify-examples-image" ]; then
              echo "The current AWS account cannot find the required examples image. Tests cannot pass.";
              exit 1;
          else
              echo "Found it!";
              exit 0;
          fi

  eks_prepare_test_manager:
    steps:
      - run: ls -alR
      - run: ecosystem-test prepare-remote-test-manager -es aws_access_key_id2=$aws_access_key_id -es aws_secret_access_key2=$aws_secret_access_key -p $(find ~/project/workspace/build/ -name *manylinux-py311-none-linux_x86_64.wgn*) ~/project/plugin_1_5.yaml
      - run: ecosystem-test remote-upload-plugin -PN kubernetes --wagon-type manylinux
      - run: ecosystem-test remote-upload-plugin -PN helm --wagon-type manylinux
      - run: ecosystem-test remote-upload-plugin -PN utilities --wagon-type manylinux

  prepare_test_manager:
    steps:
      - run: ls -alR
      - run: ecosystem-test prepare-remote-test-manager --generate-new-aws-token -es aws_access_key_id=$aws_access_key_id -es aws_secret_access_key=$aws_secret_access_key -p $(find ~/project/workspace/build/ -name *manylinux-py311-none-linux_x86_64.wgn*) ~/project/plugin_1_5.yaml
      - run: ecosystem-test remote-upload-plugin -PN kubernetes --wagon-type manylinux
      - run: ecosystem-test remote-upload-plugin -PN helm --wagon-type manylinux
      - run: ecosystem-test remote-upload-plugin -PN utilities --wagon-type manylinux

  run_hello_world_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/blueprint-examples/hello-world-example/aws.yaml --test-id=hello-world-example-$CIRCLE_BUILD_NUM -i .circleci/hw.yaml --on-failure=uninstall-force --timeout=1800 --nested-test=.circleci/test_cloudwatch.py

  run_cf_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/virtual-machine/aws-cloudformation.yaml --test-id=virtual-machine-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 -i resource_suffix=$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_eks_test:
      steps:
        - run:
            name: run_eks_test
            no_output_timeout: 90m
            command: ecosystem-test remote-blueprint-test -b examples/blueprint-examples/kubernetes/aws-eks/blueprint.yaml --test-id=aws-eks-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 -i availability_zone_1=eu-west-3a -i availability_zone_2=eu-west-3b -i .circleci/eks-inputs.yaml -i eks_cluster_name=test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_ec2_image_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/ec2-image-feature-demo/blueprint.yaml --test-id=ec2_image-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 --on-failure=uninstall-force --timeout=3000

  run_autoscaling_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/autoscaling-feature-demo/blueprint.yaml -i aws_region_name=eu-west-3 --test-id=autoscaling-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_cloudformation_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/cloudformation-feature-demo/blueprint.yaml --test-id=cloudformation-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-2 --on-failure=uninstall-force --timeout=3000

  run_dynamodb_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/dynamodb-feature-demo/blueprint.yaml --test-id=dynamodb-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 --on-failure=uninstall-force --timeout=3000

  run_ebs_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/ebs-feature-demo/blueprint.yaml --test-id=ebs-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 --on-failure=uninstall-force --timeout=3000

  run_ec2_instance_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/ec2-vpc-feature-demo/ipv6.yaml -i aws_region_name=eu-west-3 --test-id=ec2-ipv6-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_ec2_keys_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/ec2-keys-feature-demo/blueprint.yaml --test-id=ec2_keys-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 --on-failure=uninstall-force --timeout=3000

  run_ec2_transit_gateway_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/ec2-transit-gateway-feature-demo/blueprint.yaml --test-id=ec2_transit_gateway-$CIRCLE_BUILD_NUM -i aws_region_name_a=eu-west-3 -i aws_region_name_b=eu-west-3 --on-failure=uninstall-force --timeout=3000

  run_ec2_vpc_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/ec2-vpc-feature-demo/blueprint.yaml --test-id=ec2_vpc-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 --on-failure=uninstall-force --timeout=3000

  run_natgateway_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/natgateway-feature-demo/blueprint.yaml --test-id=natgateway-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 --on-failure=uninstall-force --timeout=3000

  run_s3_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/s3-feature-demo/blueprint.yaml --test-id=s3-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 --on-failure=uninstall-force --timeout=3000

  run_sns_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/sns-feature-demo/blueprint.yaml --test-id=sns-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 --on-failure=uninstall-force --timeout=3000

  run_sqs_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/sqs-feature-demo/blueprint.yaml --test-id=sqs-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 --on-failure=uninstall-force --timeout=3000

  run_kms_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/kms-feature-demo/blueprint.yaml --test-id=kms-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 -i iam_arn=arn:aws:iam::919239153674:user/plugins_test_user --on-failure=uninstall-force --timeout=3000

  run_ecs_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/ecs-feature-demo/blueprint.yaml -i ecs_cluster_name=ecs-$CIRCLE_BUILD_NUM -i aws_region_name=eu-west-3 --test-id=ecs-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

  run_route53_test:
    steps:
      - run: ecosystem-test remote-blueprint-test -b examples/route53-feature-demo/blueprint.yaml -i aws_region_name=eu-west-3 --test-id=route53-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

jobs:

  prepare_test_manager:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager

  verify_ec2_image:
    executor: py36
    steps:
      - checkout
      - ec2_image_verify

  cf_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      # - checkout
      # - attach_workspace:
      #     at: workspace
      # - setup_manager
      # - prepare_test_manager
      - run_cf_test

  eks_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - eks_prepare_test_manager
      - run_eks_test

  ec2_image_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_ec2_image_test

  ec2_instance_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_ec2_instance_test

  ec2_keys_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_ec2_keys_test

  ec2_transit_gateway_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_ec2_transit_gateway_test

  ec2_vpc_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_ec2_vpc_test

  autoscaleing_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_autoscaling_test

  cloudformation_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_cloudformation_test

  dynamodb_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_dynamodb_test

  ebs_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_ebs_test

  natgateway_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_natgateway_test

  s3_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_s3_test

  sns_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - eks_prepare_test_manager
      - run_sns_test

  sqs_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_sqs_test

  kms_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - setup_manager
      - prepare_test_manager
      - run_kms_test

  hw_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      # - checkout
      # - attach_workspace:
      #     at: workspace
      # - setup_manager
      # - prepare_test_manager
      - run_hello_world_test

workflows:
  version: 2
  tests:
    jobs:
      - verify_ec2_image
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          <<: *unittest-post-steps
      - node/validate_version_job
      - node/validate_documentation_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - prepare_test_manager:
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

      - cf_integration_tests_py3:
          requires:
            - prepare_test_manager
            # - eks_integration_tests_py3
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      # - eks_integration_tests_py3:
      #     requires:
      #       - wagonorb/wagon
      #       - wagonorb/wagon_311
      #       - wagonorb/rhel_wagon
      #       - wagonorb/arch64_wagon
      #     filters:
      #       branches:
      #         only: /([0-9\.]*\-build|master|dev)/
      - hw_integration_tests_py3:
          requires:
            - prepare_test_manager
            # - eks_integration_tests_py3
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - releaseorb/release:
          filters:
            branches:
              only: /master/
          requires:
            - node/unittests_job
            - wagonorb/rhel_wagon
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - node/validate_version_job
            - node/validate_documentation_job
            - cf_integration_tests_py3
            - eks_integration_tests_py3
            - hw_integration_tests_py3
      - releaseorb/merge_docs_job:
          filters:
            branches:
              only: /master/
          requires:
            - releaseorb/release
            - node/validate_documentation_job
          

  sunday_wednesday:
    triggers:
    - schedule:
        cron: "0 3 * * 0,3"
        filters:
          branches:
            only:
              - master
    jobs:
      - verify_ec2_image
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          <<: *unittest-post-steps
      - node/validate_version_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - cf_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - ebs_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - verify_ec2_image
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - ec2_instance_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - verify_ec2_image
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - ec2_vpc_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - sns_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - ec2_vpc_integration_tests_py3
            - ec2_instance_integration_tests_py3
            - ebs_integration_tests_py3
            - cf_integration_tests_py3
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/


  monday_thursday:
    triggers:
    - schedule:
        cron: "0 3 * * 1,4"
        filters:
          branches:
            only:
              - master
    jobs:
      - verify_ec2_image
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          <<: *unittest-post-steps
      - node/validate_version_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - eks_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - ec2_image_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - verify_ec2_image
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - autoscaleing_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - ec2_transit_gateway_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - s3_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - kms_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/


  tuesday_friday_saturday:
    triggers:
    - schedule:
        cron: "0 3 * * 2,5,6"
        filters:
          branches:
            only:
              - master
    jobs:
      - verify_ec2_image
      - node/check_py3_compat_job
      - node/unittests_job:
          context: 
            - plugins-inputs
          <<: *unittest-post-steps
      - node/validate_version_job
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/wagon_311:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - hw_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - verify_ec2_image
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - cloudformation_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - dynamodb_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - ec2_keys_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - natgateway_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - sqs_integration_tests_py3:
          context: 
            - plugins-inputs
          <<: *job-post-steps
          requires:
            - wagonorb/wagon
            - wagonorb/wagon_311
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
