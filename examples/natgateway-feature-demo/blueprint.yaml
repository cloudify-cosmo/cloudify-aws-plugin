tosca_definitions_version: cloudify_dsl_1_4

imports:
  - http://cloudify.co/spec/cloudify/6.4.0/types.yaml
  - plugin:cloudify-aws-plugin

inputs:

  aws_access_key_id:
    type: string
    default: { get_secret: aws_access_key_id }

  aws_secret_access_key:
    type: string
    default: { get_secret: aws_secret_access_key }

  aws_region_name:
    type: string
    default: { get_secret: aws_region_name }

dsl_definitions:

  client_config: &client_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    aws_session_token: { get_secret: aws_session_token }
    region_name: { get_input: aws_region_name }

node_templates:

  natgateway:
    type: cloudify.nodes.aws.ec2.NATGateway
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          ConnectivityType: private
    relationships:
      - type: cloudify.relationships.depends_on
        target: subnet
      - type: cloudify.relationships.depends_on
        target: elasticip

  elasticip:
   type: cloudify.nodes.aws.ec2.ElasticIP
   properties:
     resource_config:
       kwargs:
         Domain: 'vpc'
     client_config: *client_config

  subnet:
    type: cloudify.nodes.aws.ec2.Subnet
    properties:
      resource_config:
        CidrBlock: '172.30.0.0/24'
        kwargs:
          AvailabilityZone: { concat: [ { get_input: aws_region_name }, 'b' ] }
      client_config: *client_config
      Tags:
        - Key: Name
          Value: Subnet
    relationships:
      - type: cloudify.relationships.depends_on
        target: vpc

  vpc:
    type: cloudify.nodes.aws.ec2.Vpc
    properties:
      resource_config:
        CidrBlock: '172.30.0.0/16'
        kwargs:
      client_config: *client_config
      Tags:
        - Key: Name
          Value: VPC
