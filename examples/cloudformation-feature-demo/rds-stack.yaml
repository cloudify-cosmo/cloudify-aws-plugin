tosca_definitions_version: cloudify_dsl_1_4

imports:
  - http://cloudify.co/spec/cloudify/6.4.0/types.yaml
  - plugin:cloudify-aws-plugin

inputs:

  aws_access_key_id:
    type: string
    default: { get_secret: aws_access_key_id }

  aws_secret_access_key:
    type: string
    default: { get_secret: aws_secret_access_key }

  aws_region_name:
    type: string
    default: { get_secret: ec2_region_name }

dsl_definitions:

  client_config: &client_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    region_name: { get_input: aws_region_name }

node_templates:

  mydb:
    type: cloudify.nodes.aws.CloudFormation.Stack
    properties:
      resource_id: { concat: [ { get_input: aws_region_name }, cfntest ] }
      client_config: *client_config
      resource_config:
        kwargs:
          StackName: cfntest0
          TemplateBody:
            AWSTemplateFormatVersion: "2010-09-09"
            Description: A sample template
            Outputs:
              MyDBEndpointAddress:
                Description: The RDS Instance address.
                Value:
                  Fn::GetAtt: [MyDB, Endpoint.Address]
              MyDBEndpointPort:
                Description: The RDS Instance port.
                Value:
                  Fn::GetAtt: [MyDB, Endpoint.Port]
            Resources:
              MyDB:
                Type: "AWS::RDS::DBInstance"
                Properties:
                  AllocatedStorage: "100"
                  DBInstanceClass: "db.m1.small"
                  Engine: "MySQL"
                  EngineVersion: "5.5"
                  Iops: "1000"
                  MasterUsername: MyUser
                  MasterUserPassword: MyPassword
                DeletionPolicy: "Snapshot"

outputs:

  Endpoint:
    value:
      concat:
      - { get_attribute: [ mydb, Outputs, 0, OutputValue ] }
      - ':'
      - { get_attribute: [ mydb, Outputs, 1, OutputValue ] }
