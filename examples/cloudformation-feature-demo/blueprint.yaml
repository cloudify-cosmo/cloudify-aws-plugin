tosca_definitions_version: cloudify_dsl_1_4

imports:
  - http://cloudify.co/spec/cloudify/6.4.0/types.yaml
  - plugin:cloudify-aws-plugin

inputs:

  aws_access_key_id:
    display_label: Aws Access Key Id
    type: string
    default: { get_secret: aws_access_key_id }

  aws_secret_access_key:
    display_label: Aws Secret Access Key
    type: string
    default: { get_secret: aws_secret_access_key }

  aws_region_name:
    display_label: Aws Region Name
    type: string
    default: { get_secret: ec2_region_name }

  availability_zone:
    display_label: Availability Zone
    type: string
    default: { concat: [ { get_input: aws_region_name }, 'b' ] }

  subnet_cidr:
    display_label: Subnet Cidr
    type: string
    default: 172.30.0.0/24

  vpc_cidr:
    display_label: Vpc Cidr
    type: string
    default: 172.30.0.0/16

  key_name:
    display_label: Key Name
    type: string
    default: AWSTestKey

dsl_definitions:

  client_config: &client_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    aws_session_token: { get_secret: aws_session_token }
    region_name: { get_input: aws_region_name }

node_templates:

  ec2_instance_stack:
    type: cloudify.nodes.aws.CloudFormation.Stack
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          StackName: EC2Instance
          Parameters:
            - ParameterKey: KeyName
              ParameterValue: { get_input: key_name }
            - ParameterKey: PrimaryIPAddress
              ParameterValue: '172.30.0.10'
            - ParameterKey: SecondaryIPAddress
              ParameterValue: '172.30.0.11'
            - ParameterKey: SubnetId
              ParameterValue: { get_attribute: [ public_subnet, aws_resource_id ] }
            - ParameterKey: VpcId
              ParameterValue: { get_attribute: [ vpc, aws_resource_id ] }
            TemplateURL: https://s3-ap-northeast-1.amazonaws.com/ecosystem-tests-no-delete/VPC_EC2_Instance_With_Multiple_Static_IPAddresses.yaml.txt
    relationships:
      - type: cloudify.relationships.depends_on
        target: key_pair_node

  hello_bucket_stack:
    type: cloudify.nodes.aws.CloudFormation.Stack
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          StackName: HelloBucket
          TemplateBody:
            AWSTemplateFormatVersion: "2010-09-09"
            Description: S3 HelloBucket
            Resources:
              HelloBucket:
                Type: AWS::S3::Bucket
                Properties:
                  AccessControl: PublicRead
                  WebsiteConfiguration:
                    IndexDocument: index.html
                    ErrorDocument: error.html

  key_pair_node:
    type: cloudify.nodes.aws.ec2.Keypair
    properties:
      client_config: *client_config
      resource_config:
        KeyName: { get_input: key_name }
      store_in_runtime_properties: true
    relationships:
      - type: cloudify.relationships.depends_on
        target: public_subnet

  public_subnet:
    type: cloudify.nodes.aws.ec2.Subnet
    properties:
      client_config: *client_config
      resource_config:
        CidrBlock: { get_input: subnet_cidr }
        AvailabilityZone: { get_input: availability_zone }
    relationships:
      - type: cloudify.relationships.depends_on
        target: vpc
      - type: cloudify.relationships.depends_on
        target: internet_gateway

  internet_gateway:
    type: cloudify.nodes.aws.ec2.InternetGateway
    properties:
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.connected_to
        target: vpc

  vpc:
    type: cloudify.nodes.aws.ec2.Vpc
    properties:
      client_config: *client_config
      resource_config:
        CidrBlock: { get_input: vpc_cidr }
        kwargs:
          AmazonProvidedIpv6CidrBlock: true
