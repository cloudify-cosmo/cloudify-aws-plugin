tosca_definitions_version: cloudify_dsl_1_4

imports:
  - http://cloudify.co/spec/cloudify/6.4.0/types.yaml
  - plugin:cloudify-aws-plugin

inputs:

  aws_access_key_id:
    display_label: Aws Access Key Id
    type: string
    default: { get_secret: aws_access_key_id }

  aws_secret_access_key:
    display_label: Aws Secret Access Key
    type: string
    default: { get_secret: aws_secret_access_key }

  aws_region_name:
    display_label: Aws Region Name
    type: string
    default: eu-west-1

  instance_type:
    display_label: Instance Type
    type: string
    default: t2.micro

dsl_definitions:

  client_config: &client_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    aws_session_token: { get_secret: aws_session_token }
    region_name: { get_input: aws_region_name }

node_templates:

  pmcfy_lh:
    type: cloudify.nodes.aws.autoscaling.LifecycleHook
    properties:
      resource_config:
        LifecycleHookName: pmcfy_lh
        LifecycleTransition: autoscaling:EC2_INSTANCE_LAUNCHING
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.depends_on
        target: pmcfy_as

  pmcfy_asp:
    type: cloudify.nodes.aws.autoscaling.Policy
    properties:
      resource_config:
        PolicyName: pmcfy_asp
        PolicyType: SimpleScaling
        AdjustmentType: ChangeInCapacity
        ScalingAdjustment: 1
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.depends_on
        target: pmcfy_as

  pmcfy_as:
    type: cloudify.nodes.aws.autoscaling.Group
    properties:
      resource_config:
        AutoScalingGroupName: pmcfy_as
        MinSize: 2
        MaxSize: 4
        kwargs:
          DesiredCapacity: 2
          DefaultCooldown: 20
          AvailabilityZones:
          - { concat: [ { get_input: aws_region_name }, 'a' ] }
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.depends_on
        target: pmcfy_lc
    interfaces:
      cloudify.interfaces.lifecycle:
        delete:
          implementation: aws.cloudify_aws.autoscaling.resources.autoscaling_group.delete
          inputs:
            resource_config:
              ForceDelete: true

  pmcfy_lc:
    type: cloudify.nodes.aws.autoscaling.LaunchConfiguration
    properties:
      resource_config:
        LaunchConfigurationName: pmcfy_lc
        ImageId: { get_attribute: [ ami, aws_resource_id ] }
        InstanceType: { get_input: instance_type }
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.depends_on
        target: ami

  ami:
    type: cloudify.nodes.aws.ec2.Image
    properties:
      resource_config:
        kwargs:
          Filters:
            - Name: name
              Values:
                - 'CentOS7-cloudify-examples-image'
            - Name: owner-id
              Values:
                - '263721492972'
      client_config: *client_config
